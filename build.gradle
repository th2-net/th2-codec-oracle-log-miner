import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.8.22"
    id "org.jetbrains.kotlin.kapt" version "1.8.22"
    id("java-library")
    id("maven-publish")

    id "com.exactpro.th2.gradle.publish" version "0.0.6"
    id "com.exactpro.th2.gradle.component" version "0.0.6"

    id "antlr"
    id "me.champeau.jmh" version "0.7.2"
}

group = 'com.exactpro.th2'
version = release_version

kotlin {
    jvmToolchain(11)
}

repositories {
    mavenCentral()
    maven {
        name 'Sonatype_snapshots'
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }
    mavenLocal()

    configurations.configureEach {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

dependencies {
    implementation "com.exactpro.th2:common:5.10.1-dev"
    implementation "com.exactpro.th2:common-utils:2.2.3-dev"
    implementation "com.exactpro.th2:codec:5.5.0-th2-gradle-plugin-+"

    implementation "com.fasterxml.jackson.core:jackson-databind"

    implementation "io.github.microutils:kotlin-logging:3.0.5"

    // https://mvnrepository.com/artifact/org.antlr/antlr4
    antlr 'org.antlr:antlr4:4.13.1'
    implementation 'org.antlr:antlr4-runtime:4.13.1'

    jmh 'org.openjdk.jmh:jmh-core:1.37'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
    jmh 'org.openjdk.jmh:jmh-generator-bytecode:1.37'
    jmh 'com.github.jsqlparser:jsqlparser:4.9'

    compileOnly "com.google.auto.service:auto-service-annotations:1.1.1"
    kapt "com.google.auto.service:auto-service:1.1.1"

    testImplementation "com.github.doyaaaaaken:kotlin-csv-jvm:1.9.3"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:5.3.1'
    testImplementation 'io.strikt:strikt-core:0.34.1'
}

configurations {
    compile {
        // Undo extendsFrom relationship between the 'antlr' configuration and the 'api' configuration
        // See https://github.com/gradle/gradle/blob/master/subprojects/antlr/src/main/java/org/gradle/api/plugins/antlr/AntlrPlugin.java#L60
        extendsFrom = extendsFrom.findAll { it != configurations.antlr }
    }
}

application {
    mainClass.set("com.exactpro.th2.codec.MainKt")
}

jmh {
    warmupIterations = 1
    iterations = 3
    fork = 2
}

generateGrammarSource {
    arguments += ["-package", "com.exactpro.th2.codec.oracle.logminer.antlr"]
    outputDirectory = file("$outputDirectory/com/exactpro/th2/codec/oracle/logminer/antlr")
}
generateTestGrammarSource.enabled(false)

sourcesJar.dependsOn.add('generateGrammarSource')
tasks.withType(KotlinCompile).configureEach {
    dependsOn.add('generateGrammarSource')
}

clean.doLast {
    file('src/main/gen').deleteDir()
}

dependencyCheck {
    suppressionFile='supressions.xml'
}